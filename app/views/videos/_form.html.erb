<div id="upload_a_video">
  <h2>Upload A Video</h2>

  <% form_tag @upload_url, :enctype => "multipart/form-data" do %>
    <%= hidden_field_tag :success_redirect, "#{PROTOCOL_HOST_PORT}#{profile_videos_path(@p)}" %>
    <%= hidden_field_tag :failed_redirect,  "#{PROTOCOL_HOST_PORT}" %>
    <%= hidden_field_tag :postback_url, "#{PROTOCOL_HOST_PORT}#{profile_videos_path(@p)}" %>
    <%= hidden_field_tag :access_key, Ankoder::Configuration::access_key %>
    <p>
    <label for="video[filename]">Title:(optional)</label>
    <%= text_field_tag "video[filename]" %>
    </p>
    <p>
    <label for="file">File:</label>
    <%= file_field_tag "file" %>
    </p>
    <%= submit_tag "Upload" %>
  <% end %>

  <div>
    <form id="form1" action="/" method="post" enctype="multipart/form-data">
      <fieldset class="flash" id="fsUploadProgress">
        <legend>Upload Queue</legend>
      </fieldset>                                                
      <div id="divStatus">0 Files Uploaded</div>                         
      <div>   
        <input type="button" value="Upload file (Max 100 MB)" onclick="swfu.selectFiles()" style="font-size: 8pt;" />
        <input id="btnCancel" type="button" value="Cancel All Uploads" onclick="swfu.cancelQueue();" disabled="disabled" style="font-size: 8pt;" />
      </div>
    </form>
  </div>

  <div class="clear"></div>
</div>

<% javascript_tag do %>
  var swfu;

  window.onload = function() {
    swfu = new SWFUpload({
      // Backend Settings
      upload_url : "<%= @upload_url %>",
      file_post_name : 'file',
      post_params: {"access_key" : "<%= Ankoder::Configuration::access_key %>",
      //"success_redirect" : "<%= PROTOCOL_HOST_PORT + profile_videos_path(@p) %>",
      "failed_redirect" : "<%= PROTOCOL_HOST_PORT %>",
      "postback_url" : "<%= PROTOCOL_HOST_PORT + profile_videos_path(@p) %>" },
      flash_url : "/resources/swfupload_f9.swf",

      // File Upload Settings
      file_size_limit : "1024000", //1000MB
      file_types : "*.avi;*.wmv",
      file_types_description : "video files only",
      file_upload_limit : "3",
      file_queue_limit : "3",

      custom_settings : {
        progressTarget : "fsUploadProgress",
        cancelButtonId : "btnCancel"
      },

      // The event handler functions are defined in handlers.js
      file_queued_handler : fileQueued,
      file_queue_error_handler : fileQueueError,
      file_dialog_complete_handler : fileDialogComplete,
      upload_start_handler : uploadStart,
      upload_progress_handler : uploadProgress,
      upload_error_handler : uploadError,
      upload_success_handler : uploadSuccess,
      upload_complete_handler : uploadComplete,
      queue_complete_handler : queueComplete,  // Queue plugin event

      // UI Settings
//      ui_container_id : flashUIElement,
//      degraded_container_id : fileUIElement,

      // Debug Settings
//      debug: true,
//    debug_handler: swfDebug
    });
  };

<% end %>
